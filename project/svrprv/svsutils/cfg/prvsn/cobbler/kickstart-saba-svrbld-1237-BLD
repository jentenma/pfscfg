# kickstart template for Fedora 8 and later.
# (includes %end blocks)
# do not use with earlier distros

#platform=x86, AMD64, or Intel EM64T
# System authorization information
auth  --useshadow  --enablemd5
# System bootloader configuration
bootloader --location=mbr
# Partition clearing information
clearpart --all --initlabel
# Use text mode install
text
# Firewall configuration
firewall --disabled
# Run the Setup Agent on first boot
firstboot --disable
# System keyboard
keyboard us
# System language
lang en_US
# Use network installation
url --url=$tree
# If any cobbler repo definitions were referenced in the kickstart profile, include them here.
$yum_repo_stanza
# Network information
$SNIPPET('network_config')
# Reboot after installation
reboot

#Root password
rootpw --iscrypted $default_password_crypted
# SELinux configuration
selinux --disabled
# Do not configure the X Window System
skipx
# System timezone
timezone  America/New_York
# Install OS instead of upgrade
install
# Clear the Master Boot Record
zerombr
# Allow anaconda to partition the system as needed
autopart

%pre
$SNIPPET('log_ks_pre')
$SNIPPET('kickstart_start')
$SNIPPET('pre_install_network_config')
# Enable installation monitoring
$SNIPPET('pre_anamon')
%end

%packages
$SNIPPET('func_install_if_enabled')
ipmitool
nfs-utils
net-tools
lsof
iperf
autoconf
automake
binutils
bison
flex
gcc
gcc-c++
gettext
libtool
make
patch
pkgconfig
redhat-rpm-config
rpm-build
rpm-sign
wget
docker-common
policycoreutils-python
container-selinux
skopeo-containers
libseccomp
git
docker
%end

%post --nochroot
$SNIPPET('log_ks_post_nochroot')
%end

%post
$SNIPPET('log_ks_post')
#show selinux level

mkdir /root/mlnx
curl "http://$server/prvsn-files/mlnx-en-4.1-1.0.2.0-rhel7.3-ppc64le.tar" -o /root/mlnx/mlnx-en-4.1-1.0.2.0-rhel7.3-ppc64le.tar
curl "http://$server/prvsn-files/firstboot.sh" -o /root/firstboot.sh
curl "http://$server/prvsn-files/70-persistent-net.rules" -o /etc/udev/rules.d/70-persistent-net.rules
curl "http://$server/prvsn-files/hosts" -o /etc/hosts
echo "@reboot root /bin/bash /root/firstboot.sh" >> /etc/crontab

/sbin/getenforce
# start enable NFS server
echo "prvsn_export_dir = $prvsn_export_dir"
echo "prvsn_path = $prvsn_path"
/bin/systemctl enable nfs-server
/bin/systemctl enable rpcbind
/bin/systemctl enable nfs-lock
/bin/systemctl enable nfs-idmap
/usr/bin/echo '$prvsn_export_dir *(rw,sync,no_root_squash,no_all_squash)' >> /etc/exports
/usr/bin/mkdir $prvsn_export_dir
chmod 777 $prvsn_export_dir
/usr/sbin/exportfs -r
# End enable NFS server
# Start enable docker
/bin/systemctl enable docker.service
# End enable docker
# Start yum configuration
$yum_config_stanza
# End yum configuration
$SNIPPET('post_install_kernel_options')
$SNIPPET('post_install_network_config')
$SNIPPET('func_register_if_enabled')
$SNIPPET('download_config_files')
$SNIPPET('koan_environment')
$SNIPPET('redhat_register')
$SNIPPET('cobbler_register')
# Enable post-install boot notification
$SNIPPET('post_anamon')
# Start final steps
$SNIPPET('kickstart_done')
# End final steps
%end

